services:

  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis-data:/data
    networks:
      - backend

  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./:/app
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  health:
    build:
      context: .
      dockerfile: cmd/health/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "50001:50001"
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./:/app
    networks:
      - backend

  user:
    build:
      context: .
      dockerfile: cmd/user/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "50002:50002"
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./:/app
    networks:
      - backend

  security:
    build:
      context: .
      dockerfile: cmd/security/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "50004:50004"
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./:/app
    networks:
      - backend

  broker:
    build:
      context: .
      dockerfile: cmd/broker/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "50005:50005"
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./:/app
    networks:
      - backend

  transaction:
    build:
      context: .
      dockerfile: cmd/transaction/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "50006:50006"
    env_file:
      - .env
    depends_on:
      - api
    volumes:
      - ./:/app
    networks:
      - backend

volumes:
  db-data:
  redis-data:
    
networks:
  backend: