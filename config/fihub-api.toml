### DO NOT COMMIT ANY ENVIRONMENT CHANGE ON THIS FILE
### If you need to use another environment, edit this file localy, and do not propagate the changes.

# Specify the application environment
# Possible values: "production", "development"
# Default value: "production"
APP_ENV = "production"

# Specify the logging level
# Possible values: "debug", "info", "warn", "error"
# Default value: "debug"
LOGGER_LEVEL = "debug"

# Specify the default language for the application
# Used for localization and internationalization
# Default value: "en"
DEFAULT_LANGUAGE = "en"

# Specify the default api path
# This is the base path for all API endpoints
# Default value: "/api/v1"
API_BASE_PATH = "/api/v1"

# Specify the server running port. API (including swagger) will be reachable through this port
# Default value: "8080"
HTTP_SERVER_PORT = "8080"

# Enable or disable TLS and HTTPS server security (false = HTTPS / true = HTTP)
# If HTTP_SERVER_ENABLE_TLS = true, HTTP_SERVER_SSL_FILE_CRT and HTTP_SERVER_SSL_FILE_KEY must be specified
# Default value: "false"
HTTP_SERVER_ENABLE_TLS = "false"

# TLS certificate file path
# Default value: "certs/server.rsa.crt"
HTTP_SERVER_TLS_FILE_CRT = "certs/server.rsa.crt"

# TLS private key file path
# Default value: "certs/server.rsa.key"
HTTP_SERVER_TLS_FILE_KEY = "certs/server.rsa.key"

# Enable or disable CORS policy on the API
# See https://enable-cors.org/
# Default value: "false"
HTTP_SERVER_API_ENABLE_CORS = "true"

# Enable or disable API security
# If unsecured = false, a valid JWT (JSON Web Token) is required to access the API
# This JWT is delivered using the /auth/token endpoint (which requires a login and a password)
# If HTTP_SERVER_API_ENABLE_SECURITY = false, no JWT is required and all endpoints can be called freely
# Default value: "true"
HTTP_SERVER_API_ENABLE_SECURITY = "true"

# Enable or disable API Gateway mode
# If HTTP_SERVER_API_ENABLE_GATEWAY_MODE = true, the API will still required a JWT but no validation will be done on this JWT
# Be aware that in gateway mode, every JWT MUST have been validated by another layer of security (in this case, an API Gateway using the auth-api)
# The auth-api will be responsible to deliver the tokens (/auth/token) and to validate the tokens using middleware on API protected routes
# Default value: "false"
HTTP_SERVER_API_ENABLE_GATEWAY_MODE = "false"

# Specify the allowed origin for CORS (Cross-Origin Resource Sharing)
# This is used to control which domains can access the API
# Items must be separated by commas and can include wildcards
# Default value: "https://*,http://*"
CORS_ALLOWED_ORIGIN = "https://*,http://*"

# Specify the port for the Health microservice
# This port is used to run the gRPC HealthService
# Default value: "50001"
HEALTH_MICROSERVICE_PORT = "50001"

# Specify the port for the Broker microservice
# This port is used to run the gRPC BrokerService
# Default value: "50003"
BROKER_MICROSERVICE_PORT = "50003"

# Specify the port for the Transaction microservice
# This port is used to run the gRPC TransactionService
# Default value: "50004"
TRANSACTION_MICROSERVICE_PORT = "50004"

# Specify the PostgreSQL username
# Used to authenticate with the PostgreSQL database
# Default value: "postgres"
POSTGRES_USER = "postgres"

# Specify the PostgreSQL password
# Used to authenticate with the PostgreSQL database
# Default value: "postgres"
POSTGRES_PASSWORD = "postgres"

# Specify the PostgreSQL host
# Use "postgres" when running through Docker, "localhost" otherwise
# Default value: "postgres"
POSTGRES_HOST = "postgres"

# Specify the PostgreSQL database name
# The name of the database to connect to
# Default value: "fihub"
POSTGRES_DB = "fihub"

# Specify the PostgreSQL port
# The port on which the PostgreSQL server is running
# Default value: "5432"
POSTGRES_PORT = "5432"

# Specify the maximum number of open connections in the PostgreSQL connection pool
# Default value: "30"
POSTGRES_MAX_OPEN_CONNS = "30"

# Specify the maximum number of idle connections in the PostgreSQL connection pool
# Default value: "30"
POSTGRES_MAX_IDLE_CONNS = "30"

# Specify the maximum idle time for connections in the PostgreSQL connection pool
# Expressed as a Golang duration
# Default value: "15m"
POSTGRES_MAX_IDLE_TIME = "15m"

# Specify the length of the OTP (One-Time Password)
# Default value: "6"
OTP_LENGTH = "6"

# Specify the duration for which the OTP is valid
# Expressed as a Golang duration
# Default value: "30m"
OTP_DURATION = "30m"

# Specify the maximum number of OTP requests allowed per client
# Default value: "3"
OTP_MIDDLEWARE_REQUEST_LIMIT = "3"

# Specify the time window for OTP request limits
# Expressed as a Golang duration
# Default value: "24h"
OTP_MIDDLEWARE_REQUEST_LENGTH = "24h"

# Specify the maximum number of OTP input attempts allowed
# Default value: "5"
OTP_MIDDLEWARE_INPUT_LIMIT = "5"

# Specify the time window for OTP input attempts
# This value should be the same as OTP_DURATION to ensure proper validation
# Expressed as a Golang duration
# Default value: "30m"
OTP_MIDDLEWARE_INPUT_WINDOW = "30m"

# Specify the SendGrid API key
# Used for sending emails through the SendGrid service
# Default value: "YOUR_SENDGRID_API_KEY"
SENDGRID_API_KEY = "YOUR_SENDGRID_API_KEY"

# Specify the sender name for emails sent via SendGrid
# Default value: "Fihub"
SENDGRID_SENDER_NAME = "Fihub"

# Specify the sender email address for emails sent via SendGrid
# Default value: "contact@fihub.com"
SENDGRID_SENDER_EMAIL = "contact@fihub.com"